#include <opencv2/imgproc/imgproc.hpp>
#include <opencv2/opencv.hpp>
#include <opencv2/highgui/highgui_c.h>
#include <stdio.h>     
#include <stdlib.h>    
#include <time.h>     
using namespace cv;
using namespace std;
int dizi[255];

void mustafaOtsu(Mat img, int threshValuee,int dizi[]) {
	int vMax=0;
	for (int i = 0; i < img.cols; i++) {
		for (int j = 0; j < img.rows; j++) {
			dizi[img.at<uchar>(j, i)]++;
		}
	}
	for (int threshValue = 0; threshValue < 256; threshValue++) {
		float ort1 = 0; float ort2 = 0; float weight1 = 0; float weight2 = 0;
		for (int i = 0; i <= threshValue; i++) {
			ort1 = ort1 + dizi[i] * i;
			ort2 = ort2 + dizi[i];
		}
		float mean1 = ort1 / ort2;
		weight1 = ort2 / img.cols;
		weight1 = weight1 / img.rows;
		ort1 = 0; ort2 = 0;
		for (int i = threshValue + 1; i < 256; i++) {
			ort1 = ort1 + dizi[i] * i;
			ort2 = ort2 + dizi[i];
		}
		float mean2 = ort1 / ort2;
		weight2 = ort2 / img.cols;
		weight2 = weight2 / img.rows;
		cout << "mean1:" << mean1 << "			";
		cout << "mean2:" << mean2 << endl;
		cout << "weight1:" << weight1 << "			";
		cout << "weight2:" << weight2 << endl;
		ort1 = 0;
		ort2 = 0;
		float ort3 = 0;
		for (int i = 0; i <= threshValue; i++) {
			ort1 = dizi[i] * pow(abs(i - mean1), 2);
			ort2 = ort2 + ort1;
			ort3 = ort3 + dizi[i];
		}
		float sigma1 = ort2 / ort3;
		ort1 = 0;
		ort2 = 0;
		ort3 = 0;
		for (int i = threshValue + 1; i < 256; i++) {
			ort1 = dizi[i] * pow(abs(i - mean2), 2);
			ort2 = ort2 + ort1;
			ort3 = ort3 + dizi[i];
		}
		float sigma2 = ort2 / ort3;
		cout << "sigma1:" << sigma1 << "			";
		cout << "sigma2:" << sigma2 << endl;
		float Vb = weight1 * weight2 * pow(abs(mean1 - mean2), 2);
		float Vw = weight1 * sigma1 + weight2 * sigma2;
		cout << "Vb:" << Vb << endl;
		cout << "Vw:" << Vw << endl;
		if (Vb > vMax) {
			vMax = Vb;
			threshValuee = threshValue;
		}
	}
	for (int i = 0; i < img.cols; i++) {
		for (int j = 0; j < img.rows; j++) {
			if (img.at<uchar>(j, i) <= threshValuee) {
				img.at<uchar>(j, i) = 0;
			}
			else
				img.at<uchar>(j, i) = 255;
		}
	}
	imshow("myFunction", img);

}
Mat img3;
int vb = 0;
int main(){
	Mat img = imread("eyes.jpg", 1);
	imshow("renkl'", img);
	cvtColor(img, img, COLOR_BGR2GRAY);
	imshow("orjinal", img);
	Mat img2(img.cols,img.rows,CV_8UC1,Scalar(0));
	//imshow("beforethresh", img);
	threshold(img, img3, 200, 255, CV_THRESH_OTSU);
	mustafaOtsu(img, 200, dizi);
	imshow("HazirFonk", img3);
	waitKey(0);
	return 0;
}


